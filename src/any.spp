mod std::any;


cls BaseStorage {}

cls Storage[T] { value: T; }

cls Any { storage: BaseStorage; }


sup Any {
    @meta::static_method
    fn new[T](value: T) -> std::Any {
        ret Any{storage=Storage{value}};
    }

    fn to[T](self: Self) -> T {
        let cast_storage = self.storage.down_cast[std::BaseStorage[T]]();
        ret cast_storage.value;
    }
}


sup ops::Default for Any {
    fn default() -> Self {
        ret Any::new[Void]();
    }
}
