mod std::str;


@meta::unstable(feature="Str", issue="1")
cls Str[B: std::AbstractStrBackend] {
    backend: B;
}

cls ToStr {}


sup[B: std::AbstractStrBackend] std::Str[B] {
        fn append[B](self: &mut Self, that: std::Str[B]) -> std::Void {
        self.backend.replace(self.backend.len, 0, that);
    }

        fn prepend[B](self: &mut Self, that: std::Str[B]) -> std::Void {
        self.backend.replace(0, self.backend.len, that);
    }

        fn clear(self: &mut Self) -> std::Void {
        self.backend.replace(0, self.backend.len, "");
    }
}

sup std::ToStr {
        @meta::abstract_method
    fn to_str(self: &Self) -> std::Str {}
}
